<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="potato.otherReview">

	<!-- 프로필정보 -->
	<select id="selOtherInfo" resultType="potato.domain.OtherReviewUserDomain">
	select img, nick
	from member
	where id=#{id}		
	</select>
	<!-- 리뷰 수 -->
	<select id="selRevCnt" resultType="int">
	select count(*)
	from review
	where id=#{id}
	</select>
	<!-- 리뷰 조회 -->
	<select id="selRevAll" resultType="potato.domain.OtherReviewDomain" parameterType="potato.vo.OtherReviewVO">
	select ri.review_idx, ri.id, m.nick, m.img, regexp_replace(listagg(ri.img, ',') within group(order by img_idx), '([^,]+)(,\1)+', '\1') foodimg,
	nvl(regexp_count(regexp_replace(listagg(ID_CLICKER, ',') within group(order by l.REVIEW_IDX), '([^,]+)(,\1)+', '\1'), ',')+1,0) liked, r.rating, r.contents, r.post_date
	from review_img ri, review r, liked l, member m
	where (ri.review_idx(+)=r.review_idx and ri.id(+)=r.id and ri.restarea_idx(+)=r.restarea_idx
			and l.review_idx(+)=ri.review_idx and l.review_idx(+)=r.review_idx and l.id_writer(+)=ri.id and l.id_writer(+)=r.id
			and l.restarea_idx(+)=ri.restarea_idx and l.restarea_idx(+)=r.restarea_idx and m.id=ri.id) and ri.restarea_idx=#{review_idx}
	group by ri.review_idx, ri.id, r.rating, r.contents, r.post_date, m.nick, m.img
	<if test="dateFlag==1 or dateFlag=''">
	order by post_date desc, review_idx desc
	</if>
	<if test="dateFlag==2">
	order by post_date, review_idx
	</if>
	offset 0 rows
	fetch next #{addFlag}*5 rows only
	</select>

	<!-- 리뷰 좋아요 추가 -->
	<insert id="insLikeAdd" parameterType="potato.vo.OtherReviewLikeVO">
	insert into liked(id_clicker, review_idx, id_writer, restarea_idx)
	values (#{id_clicker}, #{review_idx}, #{id_writer}, #{restarea_idx})
	</insert>

	<!-- 리뷰 좋아요 삭제 -->
	<delete id="delLikeDel" parameterType="potato.vo.OtherReviewLikeVO">
	delete from liked
	where id_clicker=#{id_clicker} and review_idx=#{review_idx} and restarea_idx=#{restarea_idx}
	</delete>

	<!-- 리뷰 삭제 -->
	<delete id="delReviewDel" parameterType="potato.vo.OtherReviewVO">
	delete from review
	where review_idx=#{review_idx} and restarea_idx=#{restarea_idx}
	</delete>

	<!-- 신고창 접속 -->
	<select id="selReportPopup" resultType="potato.domain.OtherReviewReportDomain">
	select report_idx, reason
	from report_reason;
	</select>

	<!-- 신고 접수 -->
	<insert id="insReportPopup" parameterType="potato.vo.OtherReviewReportVO">
	insert into report(id_reporter, id_writer, report_idx, restarea_idx, review_idx)
	values (#{id_reporter}, #{id_writer}, #{report_idx}, #{restarea_idx}, #{review_idx})
	</insert>
	
	<!-- 페이지 -->
	
	
	
</mapper>