<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="potato.listMapper">
<!-- 전체휴게소 목록 - 다이나믹 쿼리 -->
<select id="allRestAreaList" resultType="potato.domain.RestAreaListDomain" parameterType="potato.vo.SearchFlagVO">
select ra.name,(select nvl(substr(avg(rating),1,3),0) from review where restarea_idx=ra.restarea_idx) rating,
l.line,d.kr_do,ra.img,ra.restarea_idx
from restarea ra,line l, do d
where l.line_idx(+)=ra.line_idx and d.do_idx(+)=ra.do_idx
<if test="keyword != null and keyword !='' ">
and ra.name like '%'||#{keyword}||'%'
</if>
<if test="filterFlag == 1">
order by ra.name 
</if>
<if test="filterFlag == 2">
order by  rating desc, ra.name
</if>
offset (#{pageFlag}-1)*6 rows
fetch next 6 rows only
</select>

<!-- 경부고속도로(1) -->
<select id="highwayMapPin1" resultType="potato.domain.ListMapPinDomain" parameterType="int">
select line_idx,lng,lat,restarea_idx,name
from  restarea
where line_idx=1
</select>

<!-- 남해고속도로(2) -->
<select id="highwayMapPin2" resultType="potato.domain.ListMapPinDomain" parameterType="int">
select line_idx,lng,lat,restarea_idx,name
from  restarea
where line_idx=2
</select>

<!-- 서해안고속도로(3)-->
<select id="highwayMapPin3" resultType="potato.domain.ListMapPinDomain" parameterType="int">
select line_idx,lng,lat,restarea_idx,name
from  restarea
where line_idx=3
</select>

<!-- 영동고속도로(4)-->
<select id="highwayMapPin4" resultType="potato.domain.ListMapPinDomain" parameterType="int">
select line_idx,lng,lat,restarea_idx,name
from  restarea
where line_idx=4
</select>

<!-- 중부내륙고속도로(5)-->
<select id="highwayMapPin5" resultType="potato.domain.ListMapPinDomain" parameterType="int">
select line_idx,lng,lat,restarea_idx,name
from  restarea
where line_idx=5
</select>

<!-- 도 클릭시 해당 휴게소 목록 보여주기 -->
<select id="doList" resultType="potato.domain.RestAreaListDomain" parameterType="potato.vo.DoSearchVO">
select ra.name,(select nvl(substr(avg(rating),1,3),0) from review where restarea_idx=ra.restarea_idx) rating,
l.line,d.kr_do,ra.img,ra.restarea_idx
from restarea ra,line l, do d
where (l.line_idx(+)=ra.line_idx and d.do_idx(+)=ra.do_idx) and ra.do_idx = #{do_idx}
<if test="filterFlag == 1">
order by ra.name 
</if>
<if test="filterFlag == 2">
order by  rating desc, ra.name
</if>
offset (#{pageFlag}-1)*6 rows
fetch next 6 rows only
</select>

<!-- 도 휴게소 목록에서 검색, 정렬 -->
<select id="doArrangeSearch" resultType="potato.domain.RestAreaListDomain" parameterType="potato.vo.SearchFlagVO">
select ra.name,(select avg(rating) from review where restarea_idx=ra.restarea_idx) rating,
l.line,d.kr_do,ra.img
from restarea ra,line l, do d
<where>
<if test="keyword != null and keyword !='' ">
${ra.name} like '%'||#{keyword}||'%'
</if>
</where>
where (ra.line_idx=l.line_idx and ra.do_idx=d.do_idx) and ra.do_idx=#{do_idx}
</select>

<!-- 선택한 도 이름 가져오기 -->
<select id="doName" resultType="String" parameterType="int">
select 	kr_do
from   do
where do_idx=#{do_idx}
</select>

<!-- 페이징 -->
<select id="listPage" resultType="int" parameterType="potato.vo.SearchFlagVO">
select count(restarea_idx) cnt
from restarea
<where>
<if test="keyword != null and keyword !='' ">
name like '%'||#{keyword}||'%'
</if>
</where>
</select>

<!-- 도 목록 페이징 -->
<select id="doListPage" resultType="int" parameterType="potato.vo.DoSearchVO">
select count(restarea_idx) cnt
from restarea
where do_idx=#{do_idx}
</select>

<!-- 연관검색어 -->
<select id="relatedKeyword" resultType="String" parameterType="String">
select 
from 
where
</select>
</mapper>