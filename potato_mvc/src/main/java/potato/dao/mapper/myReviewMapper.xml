<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="potato.myReview">

<!-- 리뷰조회 -->
	<select id="selMyRevAll" parameterType="potato.vo.MyReviewVO" resultType="potato.domain.MyReviewDomain">
	select r.review_idx,res.name, r.id, m.nick, m.img, regexp_replace(listagg(ri.img, ',') within group(order by img_idx), '([^,]+)(,\1)+', '\1') foodimg,
			regexp_replace(listagg(id_clicker, ',') within group(order by l.review_idx), '([^,]+)(,\1)+', '\1') idclick,
			nvl(regexp_count(regexp_replace(listagg(id_clicker, ',') within group(order by l.review_idx), '([^,]+)(,\1)+', '\1'), ',')+1,0) liked, r.rating, r.contents, r.post_date
	from   review_img ri, review r, liked l, member m, restarea res
	where  (ri.review_idx(+)=r.review_idx and ri.id(+)=r.id and ri.restarea_idx(+)=r.restarea_idx
			and l.review_idx(+)=r.review_idx and l.restarea_idx(+)=r.restarea_idx
			and m.id(+)=r.id) and r.id='${id}'
	group by r.review_idx, r.id, r.rating, r.contents, r.post_date, m.nick, m.img ,res.name
	order by post_date desc, review_idx desc
	offset (#{pageFlag}-1)*3 rows
	fetch next 3 rows only 
	</select>

	
</mapper>